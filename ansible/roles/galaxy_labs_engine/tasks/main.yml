---

- name: update apt cache
  ansible.builtin.apt:
    update_cache: yes

- name: clone git repository for galaxy-labs-engine
  ansible.builtin.git:
    repo: https://github.com/neoformit/galaxy-labs-engine.git
    dest: "{{ project_root }}"
    clone: yes
    force: yes
  tags: always

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
  loop: "{{ create_directories }}"
  tags: config

- name: template webserver configuration
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop: "{{ labs_engine.templates }}"
  tags: config

- name: copy webserver configuration
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop: "{{ labs_engine.files }}"
  tags: config

- name: Create django_cache table with 'manage.py createcachetable'
  shell: >
    docker compose --profile prod run --remove-orphans labs-engine
    python manage.py createcachetable
  args:
    chdir: "{{ project_root }}"
  tags: django

- name: Ensure app superuser login
  shell: >
    docker compose --profile prod run
    --remove-orphans
    -e DJANGO_SUPERUSER_PASSWORD={{ admin_user.password }}
    labs-engine
    python manage.py createsuperuser --noinput
    --email {{ admin_user.email }}
    --first_name {{ admin_user.first_name }}
    --last_name {{ admin_user.last_name }}
  args:
    chdir: "{{ project_root }}"
  ignore_errors: yes
  when: admin_user.email and not skip_database_migration
  tags: django,superuser

- name: update media file ownership
  file: dest={{ django_root }}/app/media owner=www-data group=www-data mode=u=rwX,g=rwX,o=rwX recurse=yes
  tags: permissions

- name: update log file ownership
  file: dest={{ django_root }}/app/logs owner=www-data group=www-data mode=u=rwX,g=rwX,o=rwX recurse=yes
  tags: permissions

- name: make update.sh executable to root
  ansible.builtin.file:
    path: /home/ubuntu/update.sh
    owner: root
    group: root
    mode: '0744'
  tags: permissions

- name: enable labs_engine socket
  ansible.builtin.systemd:
    name: labs_engine.socket
    enabled: yes
    state: started

- name: enable labs_engine service
  ansible.builtin.systemd:
    name: labs_engine
    enabled: yes
    state: started

- name: run update.sh
  shell: /home/ubuntu/update.sh
  tags:
    - django
    - update
    - config
